===================
Variables
===================

10 A = 5.4E10: B = 5.: C = .E: D = .
20 A% = 100: B% = 010
30 LET A$ = "Howard Phillips Lovecraft"

---

(source_file
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (real)))
		(statement (assignment (var_real (name_real)) (tok_eq) (real)))
		(statement (assignment (var_real (name_real)) (tok_eq) (real)))
		(statement (assignment (var_real (name_real)) (tok_eq) (real))))
	(line
		(linenum)
		(statement (assignment (var_int (name_int)) (tok_eq) (int)))
		(statement (assignment (var_int (name_int)) (tok_eq) (int))))
	(line
		(linenum)
		(statement (assignment (tok_let) (var_str (name_str)) (tok_eq) (str)))))

===================
Unary Operators
===================

10 X = +Y
20 X = -Y
30 X = NOT Y

---

(source_file
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (unary_aexpr (tok_plus) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (unary_aexpr (tok_minus) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (unary_aexpr (tok_not) (var_real (name_real)))))))

===================
Binary Operators
===================

10 X = X + Y
20 X = X - Y
30 X = X * Y
40 X = X / Y
50 X = X ^ Y
60 X = X = Y
70 X = X < Y
80 X = X > Y
90 X = X <= Y
100 X = X >= Y
110 X = X =< Y
120 X = X => Y
130 X = X <> Y
140 X = X >< Y
150 X = X AND Y
160 X = X OR Y

---

(source_file
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_plus) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_minus) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_times) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_div) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_pow) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_eq) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_less) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_gtr) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_less) (tok_eq) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_gtr) (tok_eq) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_eq) (tok_less) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_eq) (tok_gtr) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_less) (tok_gtr) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_gtr) (tok_less) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_and) (var_real (name_real))))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_or) (var_real (name_real)))))))


===================
Precedence Test 1
===================

10 X = A+B*C

---

(source_file
	(line
		(linenum)
		(statement
			(assignment
				(var_real (name_real)) (tok_eq)
				(binary_aexpr
					(var_real (name_real)) (tok_plus)
					(binary_aexpr (var_real (name_real)) (tok_times) (var_real (name_real))))))))

===================
Precedence Test 2
===================

10 X = (A+B)*C

---

(source_file
	(line
		(linenum)
		(statement
			(assignment
				(var_real (name_real)) (tok_eq)
				(binary_aexpr
					(binary_aexpr (var_real (name_real)) (tok_plus) (var_real (name_real)))
					(tok_times)
					(var_real (name_real)))))))

===================
Precedence Test 3
===================

10 X = A <= B + C

---

(source_file
	(line
		(linenum)
		(statement
			(assignment
				(var_real (name_real)) (tok_eq)
				(binary_aexpr
					(var_real (name_real))
					(tok_less) (tok_eq)
					(binary_aexpr (var_real (name_real)) (tok_plus) (var_real (name_real))))))))

===================
Math Functions
===================

10 XA = ABS(X1+X2)
20 Y = SGN(X)
30 Y = INT(X)
40 Y = SQR(X)
50 Y = SIN(X)
60 Y = COS(X)
70 Y = TAN(X)
80 Y = ATN(X)
90 Y = EXP(X)
100 Y = LOG(X)

---

(source_file
	(line
		(linenum)
		(statement
			(assignment
				(var_real (name_real)) (tok_eq)
				(fcall
					(tok_abs)
					(binary_aexpr (var_real (name_real)) (tok_plus) (var_real (name_real)))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_sgn) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_int) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_sqr) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_sin) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_cos) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_tan) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_atn) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_exp) (var_real (name_real))))))
	(line (linenum) (statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_log) (var_real (name_real)))))))


===================
Random Numbers
===================

10 X = RND(-5)
20 X = RND ( 0 )
30 X = RND(99)

---

(source_file
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_rnd) (int)))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_rnd) (int)))))
	(line
		(linenum)
		(statement (assignment (var_real (name_real)) (tok_eq) (fcall (tok_rnd) (int))))))


===================
User Functions
===================

10 DEF FN CUB(X) = X^3
20 Y = FN CUB(3)

---

(source_file
	(line
		(linenum)
		(statement
			(tok_def) (tok_fn) (name_fn) (var_real (name_real)) (tok_eq) (binary_aexpr (var_real (name_real)) (tok_pow) (int))))
	(line
		(linenum)
		(statement
			(assignment
				(var_real (name_real)) (tok_eq) (fcall (tok_fn) (name_fn) (int) )))))


===================
Nested Expressions
===================

10 X = ((1-5.0)*FN CUB(ZA) + SQR(AB))/((1+5.0)*COS(X+Y)-(ZB+A*B))

---

(source_file
	(line
		(linenum)
		(statement
			(assignment
				(var_real (name_real)) (tok_eq)
				(binary_aexpr
					(binary_aexpr
						(binary_aexpr
							(binary_aexpr (int) (tok_minus) (real))
							(tok_times)
							(fcall (tok_fn) (name_fn) (var_real (name_real))))
						(tok_plus)
						(fcall (tok_sqr) (var_real (name_real))))
					(tok_div)
					(binary_aexpr
						(binary_aexpr
							(binary_aexpr (int) (tok_plus) (real))
							(tok_times)
							(fcall (tok_cos) (binary_aexpr (var_real (name_real)) (tok_plus) (var_real (name_real)))))
						(tok_minus)
						(binary_aexpr
							(var_real (name_real))
							(tok_plus)
							(binary_aexpr (var_real (name_real)) (tok_times) (var_real (name_real))))))))))
